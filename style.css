body {
    background-color:rgba(145, 222, 222, 0.526) ;
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;

}

.container {
    width: 50%;
    height: 100vh;
    margin: auto;
    margin-top: 70px;
    /* No need for the margin-top and height, you can use flexbox to center it horizontally and vertically */
    background-color: #fff;
    border:  rgba(128, 128, 128, 0.595);
}

form {
    margin: auto;
    width: 65%;
    border: solid rgba(128, 128, 128, 0.595) 1px ;
    margin-top: 20px;
    position: relative;
    /* No need for the position */
    color:  rgba(128, 128, 128, 0.595);
}
.checklist {
    width: 100%;
    height: 40px;
    border: 2px rgba(128, 128, 128, 0.36);
    border-radius: 5px;
    -webkit-border-radius: 5px;
    -moz-border-radius: 5px;
    -ms-border-radius: 5px;
    -o-border-radius: 5px;
    /* Nice! Vendor prefixes. Just want to make sure you understand why we are using them. Let me know if you need more explanation */
    display: flex;
    flex-direction: row;
    /* No need for row. This is the default value */
    align-items: center;
    align-content: space-between;
    padding: 12px;
    margin-right: 5px;
    /* No need */
}


.container input:checked+label {
    color: #000 ;
    /* Don't forget to make the icon black as well */
}

.checklist i {
    font-size: 20px;
    margin-right: 15px;
    color: rgba(128, 128, 128, 0.248);

}

.checklist span {
    margin-left: 5px;
    font-size: 13px;
    font-family: 'Roboto', sans-serif;
} 

.check {
    -webkit-appearance: none;
    /* Nice! But here you are only supporting the browsers: Chrome and Safari, but not Firefox and Opera */
    /* You can read more about the prefix vendors */
    height: 20px;
    width: 20px;
    position: relative;
    top: 6px;
    left: 363px;
    /* This can be done using flexbox or absolute postioning (This one absolute and parent is relative) but I prefer the flexbox as it is easier */
    /* Most of the time, when you see very big values, then something is wrong */
    /* Try with it again with a flexbox. */
    transition: 0.10s;
    text-align: center;
    font-weight: 600;
    color: white;
    border-radius: 50%;
    outline: none;
    border: 1px gray solid;
    -webkit-border-radius: 50%;
    -moz-border-radius: 50%;
    -ms-border-radius: 50%;
    -o-border-radius: 50%;
}

.check:checked  {
    background-color: #0E9700;
}


.check:before {
    content: "";
}

.check:checked:before {
    content: "âœ”";
    /* This is a good idea! Using the pseudo elements to get them over the original input, nice! */
    /* Another solution is to hide the input and use your own customized styles to show checkmarks, and let the label do the check for you if you added the for attribute to it.*/
    /* I'm not saying that the idea you did is wrong, it is really great and I'm happy with it. Just saying that you can have another option of doing this. */
}

input[type=checkbox]:checked + span + .fa{
    /* Don't forget to remove unused code */
}

.check:hover {
    cursor: pointer; 
    opacity: 0.8;
    border: 2px  #0E9700 solid;
}

.header {
    /* If you take a look at the design, this should be aligned with the form. Always try to make it looks like the design */
    margin:auto;
    width: 90%;
    height: 50px;
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-top: 20px;
}

.header .fa  {
    color: rgba(128, 128, 128, 0.595);
    font-size: 24px;
}
.header a { 
    text-decoration: none;
    color: rgba(128, 128, 128, 0.595);
}

.header a span{
    color: rgba(128, 128, 128, 0.595);
    font-size:10px;
    display:block;
    text-transform:uppercase;
    letter-spacing:1px;
}

.search {
    margin: auto;
    height: 5%;
    /* It is not preferable to use percentage here, you can use pixels and the height is known and we don't want it to be related to the screen */
    width: 80%;
    margin-top: 30px;
}
.search i {
    margin-left: 65px ;
    /* As I said before, can you think about it in a different way? Why do I need this number? Maybe there is a better way to do it */
}
.search span {
    margin-left: 5px;
    
}

.search .fa-solid , .search span {
    color: rgba(128, 128, 128, 0.248);
}
.search hr {
    color: rgba(128, 128, 128, 0.595);
    height: 3px;
    width: 80%;
    background-color: rgba(128, 128, 128, 0.595);
    border: none;
}

.btns {
    width: 100%;
    height: 50px;
    display: flex;
    align-content: space-between;
    align-items: center;
}

.btns input{
    color: rgba(128, 128, 128, 0.595);
    width: 100px;
    height: 42px;
    background-color: #fff;
    border: 1px rgba(128, 128, 128, 0.595) solid;
    border-radius: 5px;
    margin-left: 100px;
}


input[type=submit] {
    color: #fff;
    border: none;
    background: linear-gradient(231deg, rgba(58,127,203,1) 6%, rgba(58,127,203,0.9363095580028886) 22%, rgba(58,127,203,0.9531162806919643) 50%, rgba(173,98,188,1) 93%);}

    /* Sorry For Being Late  */